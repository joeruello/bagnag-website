{"version":3,"sources":["webpack:///./src/pages/about.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/header.js","webpack:///./src/components/layout.js"],"names":["__webpack_require__","r","__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_components_layout__WEBPACK_IMPORTED_MODULE_1__","IndexPage","a","createElement","class","d","graphql","StaticQueryContext","StaticQuery","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3__","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3___default","_parse_path__WEBPACK_IMPORTED_MODULE_4__","React","createContext","props","Consumer","staticQueryData","data","query","render","children","Error","propTypes","PropTypes","object","string","isRequired","func","m","module","exports","require","default","ProdPageRenderer","_ref","location","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","shape","Header","_this","_React$Component","call","this","toggle","bind","assertThisInitialized_default","state","isOpen","setState","react_default","Navbar","className","dark","expand","NavbarBrand","tag","Link","to","gatsby_browser_entry","gatsby_image_default","style","width","height","marginRight","fluid","placeholderImage","childImageSharp","_3947431164","NavbarToggler","onClick","Collapse","navbar","Nav","NavItem","NavLink","Component","siteTitle","defaultProps","Layout","Fragment","Helmet_default","title","site","siteMetadata","meta","name","content","lang","header_Header","_755544856","node"],"mappings":"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","file":"component---src-pages-about-js-db2bb9489e2cd18eaad0.js","sourcesContent":["import React from 'react'\nimport Layout from '../components/layout'\nimport { StaticQuery, graphql } from 'gatsby'\nimport Img from 'gatsby-image'\n\nconst IndexPage = () => (\n  <Layout>\n    <div class=\"d-md-flex flex-md-equal w-100 my-md-3 pl-md-3\">\n      <div class=\"bg-dark mr-md-3 pt-3 px-3 pt-md-5 px-md-5 text-center text-white overflow-hidden\">\n        <div class=\"my-3 py-3\">\n          <p class=\"lead\">\n            The average Australian uses 170 plastic bags every year. 150 million\n            of these bags end up as litter and only 3% are recycled. Worldwide\n            the problem is even larger, with 2 million bags being used each\n            minute.\n          </p>\n          <p>\n            Reusable bags were introduced as a solution to the vast amount of\n            plastic bags wasted every year. A federal senate inquiry in July\n            2018 recommended all governments phase out single-use plastics by\n            2023 and the work is already underway. NSW is the only territory in\n            the country without a firm commitment to ban single-use bags.\n          </p>\n          <p>\n            However, according to a 2009 study by Dr Verghese, reusable bags\n            need to be used at least 50 times in order to be environmentally\n            friendly. Green bags especially take a lot more material and energy\n            to create than regular plastic bags and as such Dr Verghese\n            recommends we use these types of bags at least 104 times, which is\n            the equivalent of once a week for two years. If these bags are used\n            less than 52 times their impact on global warming is actually\n            greater and that of single use plastic bags.\n          </p>\n          <p>\n            So while we try hard to prevent some of the 200,000 bags that are\n            dumped in landfill every hour going to waste, we also have to be\n            very careful that our solutions donâ€™t do more harm than good.\n          </p>\n          <p>\n            Enter BagNag. BagNag is a nifty new app that uses geofencing to help\n            people remember to grab their green bags out of the car before going\n            shopping at their local supermarket. BagNag can help people save\n            time and money by preventing them from either having to walk back to\n            their cars to retrieve forgotten bags, or purchase new bags at the\n            checkout. BagNag also helps protect the environment, by ensuring\n            people really are reusing their bags, instead of doubling up by\n            purchasing bags that will just sit around the house and eventually\n            end up in the garbage bin.\n          </p>\n          <p>\n            BagNag is easy to use, you simply select your favourite Coles and\n            Woolworths stores and whenever you come within 100m of a shopping\n            centre you nominated, BagNag will send an alert to your phone,\n            reminding you to bring your bags. There is no need to open the app,\n            the reminder is automatic! BagNag costs the equivalent of one green\n            bag purchase ($0.99) and will save you time and money, all whilst\n            helping the environment.\n          </p>\n          <p>\n            BagNag is available on IOS and Android and can be found on the Apple\n            Store and Play Store.\n          </p>\n        </div>\n      </div>\n    </div>\n  </Layout>\n)\n\nexport default IndexPage\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport parsePath from \"./parse-path\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import { Link } from 'gatsby'\nimport PropTypes from 'prop-types'\nimport React from 'react'\nimport {\n  Collapse,\n  Navbar,\n  NavbarToggler,\n  NavbarBrand,\n  Nav,\n  NavItem,\n  NavLink,\n} from 'reactstrap'\nimport { StaticQuery, graphql } from 'gatsby'\nimport Img from 'gatsby-image'\nexport default class Header extends React.Component {\n  constructor(props) {\n    super(props)\n\n    this.toggle = this.toggle.bind(this)\n    this.state = {\n      isOpen: false,\n    }\n  }\n  toggle() {\n    this.setState({\n      isOpen: !this.state.isOpen,\n    })\n  }\n  render() {\n    return (\n      <div>\n        <Navbar className=\"site-header\" dark expand=\"md\">\n          <NavbarBrand tag={Link} to=\"/\">\n            <StaticQuery\n              query={graphql`\n                query {\n                  placeholderImage: file(relativePath: { eq: \"icon.png\" }) {\n                    childImageSharp {\n                      fluid(maxWidth: 30) {\n                        ...GatsbyImageSharpFluid\n                      }\n                    }\n                  }\n                }\n              `}\n              render={data => (\n                <Img\n                  style={{ width: 35, height: 35, marginRight: 8 }}\n                  fluid={data.placeholderImage.childImageSharp.fluid}\n                  className=\"d-inline-block align-bottom\"\n                />\n              )}\n            />\n            BagNag\n          </NavbarBrand>\n          <NavbarToggler onClick={this.toggle} />\n          <Collapse isOpen={this.state.isOpen} navbar>\n            <Nav className=\"ml-auto\" navbar>\n              <NavItem>\n                <NavLink to=\"/\" tag={Link}>\n                  Home\n                </NavLink>\n              </NavItem>\n              <NavItem>\n                <NavLink to=\"/about\" tag={Link}>\n                  About\n                </NavLink>\n              </NavItem>\n              <NavItem>\n                <NavLink tag={Link} to=\"/privacy\">\n                  Privacy\n                </NavLink>\n              </NavItem>\n            </Nav>\n          </Collapse>\n        </Navbar>\n      </div>\n    )\n  }\n}\n\nHeader.propTypes = {\n  siteTitle: PropTypes.string,\n}\n\nHeader.defaultProps = {\n  siteTitle: '',\n}\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport Helmet from 'react-helmet'\nimport { StaticQuery, graphql } from 'gatsby'\n\nimport Header from './header'\nimport 'bootstrap/dist/css/bootstrap.css'\nimport './layout.css'\n\nconst Layout = ({ children }) => (\n  <StaticQuery\n    query={graphql`\n      query SiteTitleQuery {\n        site {\n          siteMetadata {\n            title\n          }\n        }\n      }\n    `}\n    render={data => (\n      <>\n        <Helmet\n          title={data.site.siteMetadata.title}\n          meta={[\n            {\n              name: 'description',\n              content: 'Bagnag - Remember your green bags!',\n            },\n            { name: 'keywords', content: 'sample, something' },\n          ]}\n        >\n          <html lang=\"en\" />\n        </Helmet>\n        <Header siteTitle={data.site.siteMetadata.title} />\n        {children}\n      </>\n    )}\n  />\n)\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n"],"sourceRoot":""}