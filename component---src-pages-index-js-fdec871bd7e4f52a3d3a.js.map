{"version":3,"sources":["webpack:///./src/pages/index.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/header.js","webpack:///./src/components/layout.js"],"names":["IndexPage","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","_components_layout__WEBPACK_IMPORTED_MODULE_2__","gatsby__WEBPACK_IMPORTED_MODULE_3__","query","render","data","Fragment","console","log","class","style","backgroundSize","backgroundPosition","backgroundRepeat","backgroundImage","placeholderImage","childImageSharp","fluid","src","background","href","maxWidth","appBadge","playImage","_public_static_d_1319372690_json__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","r","__webpack_exports__","d","graphql","StaticQueryContext","StaticQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3__","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3___default","_parse_path__WEBPACK_IMPORTED_MODULE_4__","React","createContext","props","Consumer","staticQueryData","children","Error","propTypes","PropTypes","object","string","isRequired","func","m","module","exports","require","default","ProdPageRenderer","_ref","location","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","shape","Header","_this","_React$Component","call","this","toggle","bind","assertThisInitialized_default","state","isOpen","setState","react_default","Navbar","className","dark","expand","NavbarBrand","tag","Link","to","gatsby_browser_entry","gatsby_image_default","width","height","marginRight","_3947431164","NavbarToggler","onClick","Collapse","navbar","Nav","NavItem","NavLink","Component","siteTitle","defaultProps","Layout","Helmet_default","title","site","siteMetadata","meta","name","content","lang","header_Header","_755544856","node"],"mappings":"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","file":"component---src-pages-index-js-fdec871bd7e4f52a3d3a.js","sourcesContent":["import React from 'react'\nimport Layout from '../components/layout'\nimport { StaticQuery, graphql } from 'gatsby'\nimport Img from 'gatsby-image'\n\nconst IndexPage = () => (\n  <Layout>\n    <StaticQuery\n      query={graphql`\n        query {\n          placeholderImage: file(relativePath: { eq: \"boot.jpeg\" }) {\n            childImageSharp {\n              fluid(maxWidth: 1920) {\n                ...GatsbyImageSharpFluid\n              }\n            }\n          }\n          playImage: file(relativePath: { eq: \"google-play-badge.png\" }) {\n            childImageSharp {\n              fluid(maxWidth: 200) {\n                ...GatsbyImageSharpFluid\n              }\n            }\n          }\n          appBadge: file(relativePath: { eq: \"app-store-badge.png\" }) {\n            childImageSharp {\n              fluid(maxWidth: 200) {\n                ...GatsbyImageSharpFluid\n              }\n            }\n          }\n        }\n      `}\n      render={data => (\n        <>\n          {console.log(data)}\n          <div\n            class=\"position-relative overflow-hidden p-3 p-md-5 m-md-3 text-center bg-dark\"\n            style={{\n              backgroundSize: 'cover',\n              backgroundPosition: 'center',\n              backgroundRepeat: 'no-repeat',\n              backgroundImage: `url(\"${\n                data.placeholderImage.childImageSharp.fluid.src\n              }\")`,\n            }}\n          >\n            <div\n              class=\"col-md-5 p-lg-5 mx-auto my-5 text-white\"\n              style={{\n                background: 'rgba(0,0,0,0.8)',\n              }}\n            >\n              <h1 class=\"display-5 font-weight-normal text-white\">\n                Never forget your resusable bags again\n              </h1>\n              <p class=\"lead font-weight-normal\" />\n              <a href=\"https://itunes.apple.com/us/app/bagnag/id1446253855?ls=1&mt=8\">\n                <img\n                  style={{ maxWidth: 150 }}\n                  src={data.appBadge.childImageSharp.fluid.src}\n                />\n              </a>\n              <a href=\"https://play.google.com/store/apps/details?id=com.bagnag&ah=unlqAJrPHDmgYpLgZPipyt-iD6g\">\n                <img\n                  style={{ maxWidth: 150 }}\n                  src={data.playImage.childImageSharp.fluid.src}\n                />\n              </a>\n            </div>\n          </div>\n        </>\n      )}\n    />\n\n    <div class=\"d-md-flex flex-md-equal w-100 my-md-3 pl-md-3\">\n      <div class=\"bg-dark mr-md-3 pt-3 px-3 pt-md-5 px-md-5 text-center text-white overflow-hidden\">\n        <div class=\"my-3 py-3\">\n          <p class=\"lead\">\n            The average Australian uses 170 plastic bags every year. 150 million\n            of these bags end up as litter and only 3% are recycled. Worldwide\n            the problem is even larger, with 2 million bags being used each\n            minute.\n          </p>\n          <p>\n            Enter Bag Nag. Bag Nag is a nifty new app that uses geofencing to\n            help people remember to grab their green bags out of the car before\n            going shopping at their local supermarket. Bag Nag can help people\n            save time and money by preventing them from either having to walk\n            back to their cars to retrieve forgotten bags, or purchase new bags\n            at the checkout. Bag Nag also helps protect the environment, by\n            ensuring people really are reusing their bags, instead of doubling\n            up by purchasing bags that will just sit around the house and\n            eventually end up in the garbage bin.\n          </p>\n          <p>\n            Bag Nag is easy to use, you simply select your favourite Coles and\n            Woolworths stores and whenever you come within 100m of a shopping\n            centre you nominated, Bag Nag will send an alert to your phone,\n            reminding you to bring your bags. There is no need to open the app,\n            the reminder is automatic! Bag Nag costs the equivalent of one green\n            bag purchase ($0.99) and will save you time and money, all whilst\n            helping the environment.\n          </p>\n        </div>\n      </div>\n    </div>\n  </Layout>\n)\n\nexport default IndexPage\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport parsePath from \"./parse-path\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import { Link } from 'gatsby'\nimport PropTypes from 'prop-types'\nimport React from 'react'\nimport {\n  Collapse,\n  Navbar,\n  NavbarToggler,\n  NavbarBrand,\n  Nav,\n  NavItem,\n  NavLink,\n} from 'reactstrap'\nimport { StaticQuery, graphql } from 'gatsby'\nimport Img from 'gatsby-image'\nexport default class Header extends React.Component {\n  constructor(props) {\n    super(props)\n\n    this.toggle = this.toggle.bind(this)\n    this.state = {\n      isOpen: false,\n    }\n  }\n  toggle() {\n    this.setState({\n      isOpen: !this.state.isOpen,\n    })\n  }\n  render() {\n    return (\n      <div>\n        <Navbar className=\"site-header\" dark expand=\"md\">\n          <NavbarBrand tag={Link} to=\"/\">\n            <StaticQuery\n              query={graphql`\n                query {\n                  placeholderImage: file(relativePath: { eq: \"icon.png\" }) {\n                    childImageSharp {\n                      fluid(maxWidth: 30) {\n                        ...GatsbyImageSharpFluid\n                      }\n                    }\n                  }\n                }\n              `}\n              render={data => (\n                <Img\n                  style={{ width: 35, height: 35, marginRight: 8 }}\n                  fluid={data.placeholderImage.childImageSharp.fluid}\n                  className=\"d-inline-block align-bottom\"\n                />\n              )}\n            />\n            BagNag\n          </NavbarBrand>\n          <NavbarToggler onClick={this.toggle} />\n          <Collapse isOpen={this.state.isOpen} navbar>\n            <Nav className=\"ml-auto\" navbar>\n              <NavItem>\n                <NavLink to=\"/about\" tag={Link}>\n                  About\n                </NavLink>\n              </NavItem>\n              <NavItem>\n                <NavLink tag={Link} to=\"/privacy\">\n                  Privacy\n                </NavLink>\n              </NavItem>\n            </Nav>\n          </Collapse>\n        </Navbar>\n      </div>\n    )\n  }\n}\n\nHeader.propTypes = {\n  siteTitle: PropTypes.string,\n}\n\nHeader.defaultProps = {\n  siteTitle: '',\n}\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport Helmet from 'react-helmet'\nimport { StaticQuery, graphql } from 'gatsby'\n\nimport Header from './header'\nimport 'bootstrap/dist/css/bootstrap.css'\nimport './layout.css'\n\nconst Layout = ({ children }) => (\n  <StaticQuery\n    query={graphql`\n      query SiteTitleQuery {\n        site {\n          siteMetadata {\n            title\n          }\n        }\n      }\n    `}\n    render={data => (\n      <>\n        <Helmet\n          title={data.site.siteMetadata.title}\n          meta={[\n            {\n              name: 'description',\n              content: 'Bagnag - Remember your green bags!',\n            },\n            { name: 'keywords', content: 'sample, something' },\n          ]}\n        >\n          <html lang=\"en\" />\n        </Helmet>\n        <Header siteTitle={data.site.siteMetadata.title} />\n        {children}\n      </>\n    )}\n  />\n)\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n"],"sourceRoot":""}